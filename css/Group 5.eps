%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.6 (Build 17G5019) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 758 762
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 758 762
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: IMPIQL+Exo2-Medium
%!FontType1-1.0: IMPIQL+Exo2-Medium 1.0000.1.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /IMPIQL+Exo2-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /H put
dup 34 /i put
dup 35 /space put
dup 36 /T put
dup 37 /h put
dup 38 /e put
dup 39 /r put
dup 40 /exclam put
dup 41 /I put
dup 42 /quoteright put
dup 43 /m put
dup 44 /R put
dup 45 /a put
dup 46 /c put
dup 47 /l put
dup 48 /S put
dup 49 /p put
dup 50 /o put
dup 51 /u put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -175 1 index div -278 2 index div 1225 3 index div 939 5 -1 roll div]cvx def
/sfnts [<





000700000000000200220030006A0000007F0962000000004BB800C85258B101018E59B9080008006320B001234420B0032370B0144520204BB00E514BB006535A58B0341BB028596066208A5558B0022561B00145632362B0022344B30A0A05042BB30B1005042BB3111605042B59B2042808455244B30B1006042BB1060144B12401885158B0408858B1060344B12601885158B804008858B106014459595959B801FF85B0048DB1050044
00>] def
/CharStrings 21 dict dup begin
/.notdef 0 def
/space 1 def
/exclam 2 def
/H 3 def
/I 4 def
/R 5 def
/S 6 def
/T 7 def
/a 8 def
/c 9 def
/e 10 def
/h 11 def
/i 12 def
/l 13 def
/m 14 def
/o 15 def
/p 16 def
/r 17 def
/u 18 def
/quoteright 19 def
/brevecy 20 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-175 -278 1225 939}def
/UniqueID 4150346 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92633B2598E0B1EDFA3C2732C9D3498122A5E23C1999619F9F2A05B05B276D48635522C4A5BCEBDFDA37D9B72FF02106FED1D4D54F1D6E88D3D2CC1E25FB0723A7D7EC5D638E4F79091CE0605D5F9D77FF05A0ED6C777659373DE67E3C1084D034338417B98343BD9514897944EDA8DC7341FF130863BECD7B56604E842DC35C44905FFA47B60BBAD51F5E6E44BBABEDB550C419F9B7509FD664ABB93E5DC73B6A072EE7BE646851A8A68E2DED124BA99F8FCE3B5A9252907E2986EC21FEEF9994AC14C29774027D35052C16BA9038B9D930DE88C583BFC862BD61EBBD9234B1ADF8CEE752BE90634181A6D849141AEF62B4C97A152F1603A910FD405184ED8CBBE0C8F28A890AF3115AF40F04F322F1F1B1CCFECC24ED3A8D957B95F6F3ED5A8288F1605C830108DE37508E954D0C8A25AB1BDCCF95A8B940C350B88EE63E738C9666BA56E4EE593149D3CD378248680B1D3069E49221B1BD2ABCB826125817942E6A5345D7918A16635A84A205998EEF9D4C674E9C4082F2462C19FA1C7C0E08EB2D7BC339DEA6293E2E31943FC1490E2F9133AE3C6ACB137F55A9AECD3829930070D049CD22659A88BAA634F1F602B84458A1B84AAB00F1720CD19BA663E333D828F217D415AF155BAB85B2717700073060465F35A7550B04CC0C6DEE386CFD4726CB79459E9B60EB539FD3C93A178A2D9CB964B17BC639E2A2596BE672BF82B919C985A855CF4DB7915CCD344401C0EF877C35C3536C03FEBE1DB6A977C0E0

CE686713E329649DB6D6AE0671C0D9CB81B591A3F23B9E74EE4A498722EDD29B2E92353AA18EBEC149A38BAD702F644481D979B0246A3F8346C8E5CF0E908006A0DE546F0AA7FD5B69538D2843CEB8654AAF257EBEF29646E64E5D64B0C4B15346D7A9091AE1A873003C67FFFD62DE98FED6ECEE6527A218A2A948C4A7E132758DE53179D363F16FF3A69A6428972CAB466F987F58B04DADD599E5319006013A4081765798EC293399848BC003812978C21D8C896F1D8015E7048768A2CEEED92A3D40EBBFBB1152D4B55B91DBB7EB92EAB88C32DE136E434D17702459027C4D1F5E5EA517706FFF3051140B2C72CEF27B257F66386B7AD3F718975C9A0679AAE3B4E2DFE33F5551D058F6BE0843B38EBB4776C2CC7176A02084A3A998312D7F6455A91DA252CA0C47C5298378A600A8C26C77992BA07FEE1D762ABB4549BC20AD5E3D31CD4AC37ACF3BFDEB0C7D93ACA89E5F53A8BC21F1C54E3E19439CFB32995C63F3CBFEA610B663226AA88EF10346E86B0047870CD9B649EF189EEC53B66E8459ECF42B5122C8AF05286C4DADA304DF2BEF8A9D4AE02BE04349799F7AD2F70CB7583EAE9DA8572DA92FC3623C1758CAC487FF7B9F2834E4E6BC53EC980DD323FEEF20A0FA5A185A1E6487F1DA65A326FEAD22A2CC3ED335309158327BCDCF7604A6A1FC375B6168F48F1442E84E0148434616D08814E790243EE6EA4957E36769C400B56C2EEFD8C5E769D7D8A2608F04CBC038E49798F8CADE9CE665DA1E487CCC8EE2C7832790C26130FB3A147B572450C7B5845A9B659BCD3D33306F1D6BB2B52E4E24A46D8ABE89FC7F4377E1D99A919AE1F28C630E0925776C5FEE5E337AE2C08A7D317C0B38
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/IMPIQL+Exo2-Medium cguidfix
/F1.1/IMPIQL+Exo2-Medium renmfont
%RBIBeginFontSubset: XOMOUR+Exo2-Light
%!FontType1-1.0: XOMOUR+Exo2-Light 1.0000.1.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /XOMOUR+Exo2-Light def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /A put
dup 34 /n put
dup 35 /space put
dup 36 /I put
dup 37 /t put
dup 38 /e put
dup 39 /r put
dup 40 /a put
dup 41 /c put
dup 42 /i put
dup 43 /o put
dup 44 /D put
dup 45 /s put
dup 46 /g put
dup 47 /d put
dup 48 /l put
dup 49 /u put
dup 50 /y put
dup 51 /U put
dup 52 /B put
dup 53 /comma put
dup 54 /N put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -174 1 index div -270 2 index div 1204 3 index div 929 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 24 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/A 3 def
/B 4 def
/D 5 def
/I 6 def
/N 7 def
/U 8 def
/a 9 def
/c 10 def
/d 11 def
/e 12 def
/g 13 def
/i 14 def
/l 15 def
/n 16 def
/o 17 def
/r 18 def
/s 19 def
/t 20 def
/u 21 def
/y 22 def
/brevecy 23 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-174 -270 1204 929}def
/UniqueID 4109949 def
currentdict currentfile eexec

20730DEE9D24560158DD85A835DFF0F028FF28B4EF1557FD177442362AAFFFA5A49477598E5796016DC2D058CE103F913D10F1BC4284ED26A71938173C305C182321B88C22CD9BA6ADCF128D7C37B8578881ACDCF117ADED9F9F0CCB58D6946BF46C9090C868B655D1B71B58A1AAC1F4981E8FDED104C61E7A2485676A9C4F1A4FE34A742B30CE59F9F4DCDB99F5CF5332A95C319FE492190329414114A9503A64876E836A1E082FAA9D93FFF96D441209BD9E223E5B1C503A33DCA4DFE1F6998526B27DC04445BB913F1E3FEBE7DF2BB875AF9EA5B3B630ADCA8CA2BD1FBBB43C8810EB93FCC12CB2D02E6F3923EC2FFB31920069B9287D38CD06512DC24D10FE2D16CF31C9BBFBB71A8F416015AC474673151EA00A5F663B2CAC8242400329E1DBF35FB0962D55B88110CFDFEC98AF48BD452D895CD154E7895FE6937E8EA3B692A6D37E7CEBF04388461FA70F20A391B912DC739C0D11F17B59D901972792D1DA65BA10C5EA0AA77F0DC5BCAF6A4217C873860A44B3EB69FA7658E5DFD63BF50100F5E9EAFD30CEE34C52974E63E8808B320731DD6DAA3DA36C43A2EC725371277C2B1273AEE01FD1B8DF61CA13C5B1D1194A1B5D83ACC4017444674F3670876FCF88FFBF8EF3858AACD84A3C3494075EF059B41A31E08D2182F48C9D8B2E5C0999C0A845AB10B87E69B7EB119DECC153D16A122B029DE181569F5052631905FE19EF1361D50BFD99F25F2938E33088A142B4679E5C94559D65B1299154029A602E58F32340FCEAD667503FD50F0FB904D653606130DD15C8EE3A5727E795FEB82313199F0FF277E46025A197EC2608829B016A7CAE88828B90635FE592C53CDB41006F38E336E4CD0397F1385942DC0DA0A9858861E183C90DA4D4D4149F8D2216D34A7DBAAEE9F2303696C3F4D75C8AC20B405DC66172552DEF40D7F8A460A671B3D8B4DDEC5428D5B8F734623BBA513BC260D218A8F129D847497C841F957B19909D2C2C975C184343BE162813350027ECE89A6F1587D9DDDA257AAD3204B5B37E6EF95D9D83EE6A60D42B422B4A29119D6D12D6FEA309C347689D1817584AB1F5EB900BC78FED5F46AD20E0F0A7C9C17013E79BEE8F28C4BB10ABB2A819C230AD5A094E3E33EF426D9CB8C3D6CACBEFBA21DB1050C6EEB410C8FAB6856413E09AE159C1F294CF0F260D2D03FDC5DA0009E0BAC801E2113FBD6957F30A0145C44497F988079D290CA15F64DB6DF4446CAACDE46C9CD76BCB0BD7DEF37B06B383D67770834AC0D4B98E79A7181C40816DE2F1CA9FFF5E0E839C53B75EF890731955BE1AC9F0ADD8E712E22B0FBF63325E6D24E3DAFB738E37719C0B17A900C50545A806236FDA31716AF4BF18EBBB6C1E662993F593C5C5F65486685F0F565FB8ACA5ECC611668619ADCD38B6523941E03C71CCC368CFB2F68C97735DFB
2B804AF82C6FA66E74C5ABF34BB7C3BCB91D0BF60925240682BAA53DF4A0B4A1FC205BDB1945113CFC70ED475ABA5A245E94895A4682BB71E04AF3919980AE7D3A76DD589C22332085020D0E313569AB651DA50E30D9DBEF741AD6ABAD559739DAA90A7E02ACB4B64A76A29F9893A2F3745B4EEAF5BF4129CA184025BEA10BB3DBEE28C7FF910245FA06F3C48768A9A0C99773E5849918E283EFEF59D4818D6E3A24603AC4131DC385533CCE8E31010E179D01BAC60C1AD6BF27614E777FF22213E222F381BD3540644EF00EABFABE69AD14EC966E1C9A7A623437AFD623A5246DF57EF4DEC78B3D46F1A52906D9F8496DE2B39C963E0AA18EBB69E606DA0E6297E3B0747E8FB472867E23CEF2C118219876BADE8925DBE22D49D06D5CBD2D89EC53EC995BBBE2EE1B1347768BE89004A28862EC6D0046A3ADA97B57C677379BE26337A64312E653E1D41B21781FED12173760369987ED7C4797E231422A0627BEFDBCE06A4C5218584F34D3FDE8303F5C8FBB482C6D10CBCD3FB168ACC6C698AE6ABF38747EF915419F95B9BEE0ABF0D4EDAE7FCD1289B712CE728E55942EDD42BE6409AF4A9C10405A1E6040B4FEECD09DAB47F373B0325862F7334B8EB43A840B00A4AB15D099746B685D813A3A17FE53C62F4A641F8E6F5DBBAB344D1784524EF39EF0B9320E2CB955D1644CA2ABCB6D3BA6C5A13E60748DD8D12F38655F061A0686DD01C5A9C1F0784750A7DA4AAE52F640B4DB492F9FD28CC79AA2CA5671DAE98721AC362D15AF62815C537BD722E32F27119754DA83F9CBE0FF0EB877B1C27ECEB887C54CCD3ED5BDDA1E770880BA619116C41C7E493AEB53072DF2E9C88F83E10D4C897AFADFD491364F981D226CA0C170503946FCE49962A01C5A663624F79B479C30A94CE8AF7DAFD8522613B5E71B45FD7AB197B76AE7F5E49A1DA824B4E6D21334FE4A840787777710F13DDB8074F00D9A2E4B3944ECDD9032FB03EBBAA1E88886FFE6F52C7F6556D10D664CD4178D4E0EB2904D496FE5DE5AC146A50C2AF1E5C13465B396CE9A7625016A8EE7A268D61350C7B4A4A07CDA505F98F8094435E6D11A6770ABA744ADF21C53A34BDBFB6A45BE0388F32A1CCBDD0BC4720278531452ACB7C1E4033A2DE43B16145B087434EF370AA99F857FEFD560BD9A49849AB33DABC48A828A7DEA894E63B1AFC9C69DC2073398F3F080DC0C87950A3870750089D2E23A77AA51F40ADD6BDBCC60F302BBB279C493C1FA20436BB64F7FB809A753D56218D9225922F82C61922E6E9BD29D482F9E8BB9F8CCBA34EF36D4120E0C47D602914F6788958248262812981BB553B636B027B189F0EB2439E031F2FACB5D660CC31A4A3E35CFEE7F02A51E52B41156BE78576F853134B52989A4DEB10D3619D61964CEAFC45C7F36D6FD29C770AF1727698F1A8A86CF66
213A610BFCF3A274375D53EABC86181027E0213529BE4B244CD7A3A082046A427DAA82445A672CE4DDBC40B83AE0CC6C1490AE89E14919EBA841DCB555448DE0E4DDC39F16C9C08A695D3C2D072E817919C53D98CD6F250B96C7C6E21432D7502BE10FC9A9AD986511BCAE753CCD535DF8F6DA1D7CC4931E36A5EBEE642E7F54C5997B5E2A6A8B06A9BE76FB194D9C6F8CCECB73195EC8AC390B2A0193ECC9834D08711024710E58C5E965B9A801ABB3355CCE52CDD076
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/XOMOUR+Exo2-Light cguidfix
/F2.1/XOMOUR+Exo2-Light renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 0.8915962 0.54769439 sc
q
0 762 m
758 762 l
758 5 l
0 5 l
0 762 l
h
W*
0 0 758 762 rc
-5 767 m
763 767 l
763 0 l
-5 0 l
h
f
Q
0.87843138 0.99607843 1 sc
q
-7 374 m
757 374 l
757 0 l
-7 0 l
-7 374 l
h
W*
0 0 758 762 rc
-12 379 m
762 379 l
762 -5 l
-12 -5 l
h
f
Q
0.11764706 0.49803922 0.59215689 sc
q
-10 261.23065 m
-10 357.15417 l
-7.3746753 373 l
756.61389 373 l
757 371.42105 l
757 271.58624 l
737.11511 287.52875 713.44617 295.5 685.9931 295.5 c
600.39215 295.5 557.59167 218 557.59167 63 c
506.23108 63 l
511.51489 218 468.71442 295.5 377.82962 295.5 c
286.94485 295.5 244.14438 218 249.42819 63 c
198.06763 63 l
198.06763 218 155.26715 295.5 69.666183 295.5 c
36.802212 295.5 10.246817 284.07687 -10 261.23065 c
h
W*
0 0 758 762 rc
-15 378 m
762 378 l
762 58 l
-15 58 l
h
f
Q
0.47422022 0.8241334 0.83851337 sc
q
296.31885 224.6544 m
266.46091 210.33293 254.05188 187.36197 259.0918 155.74153 c
266.65164 108.31088 329.68542 89.013329 376.02173 89.013329 c
422.35803 89.013329 461.70541 100.22926 470.51379 133.7294 c
476.38605 156.06282 468.56525 173.55331 447.05136 186.20088 c
459.56897 184.03882 471.05603 186.52603 481.51248 193.66249 c
491.96896 200.79895 499.02472 211.12959 502.67975 224.6544 c
495.2774 220.52895 486.33295 219.40988 475.84641 221.2972 c
460.11658 224.12816 463.93454 246.68797 454.27524 261.76324 c
444.61594 276.83853 427.51614 289.61124 399.69827 283.38843 c
371.8804 277.16562 361.13251 255.45215 363.81473 234.79466 c
365.60287 221.02299 368.77637 212.92403 373.33514 210.49777 c
365.0882 210.22969 354.13974 207.76105 340.48981 203.09186 c
320.01489 196.08807 313.35724 187.46097 304.9921 186.79059 c
296.62695 186.12022 289.17328 187.15108 286.63708 198.39551 c
284.94629 205.8918 288.17352 214.64476 296.31885 224.6544 c
h
W*
0 0 758 762 rc
253 290 m
507.67975 290 l
507.67975 84.013329 l
253 84.013329 l
h
f
Q
0.11904678 0.49891874 0.59157044 sc
q
438.76459 234.79466 m
442.03363 234.79466 444.68372 238.60199 444.68372 243.29857 c
444.68372 247.99515 442.03363 251.80247 438.76459 251.80247 c
435.49551 251.80247 432.84543 247.99515 432.84543 243.29857 c
432.84543 238.60199 435.49551 234.79466 438.76459 234.79466 c
h
W*
0 0 758 762 rc
427.84543 256.80249 m
449.68372 256.80249 l
449.68372 229.79466 l
427.84543 229.79466 l
h
f
Q
0.64359313 0.92659253 0.93931162 sc
q
326.96933 174.81644 m
326.88373 162.38824 329.99014 150.51869 336.28854 139.20779 c
345.73611 122.24142 365.86514 116.05187 379.97601 116.05187 c
394.08688 116.05187 424.98392 124.75346 424.98392 145.43416 c
424.98392 161.02817 415.65945 174.81644 398.94327 174.81644 c
382.22705 174.81644 377.48914 156.39302 358.53229 156.39302 c
345.89441 156.39302 335.37341 162.53416 326.96933 174.81644 c
h
W*
0 0 758 762 rc
321.96759 179.81644 m
429.98392 179.81644 l
429.98392 111.05187 l
321.96759 111.05187 l
h
f
Q
0.94836956 0.50439125 0 sc
q
447.69501 185.87822 m
455.49374 182.6001 468.383 185.87822 481.32553 193.42044 c
487.41278 196.96776 493.37543 203.18639 497.95926 212.12312 c
499.23495 214.61021 500.80844 218.81822 502.67975 224.74718 c
495.84125 221.07761 488.72318 219.86465 481.32553 221.10834 c
470.22906 222.97385 466.16269 227.06276 464.05698 233.31453 c
464.3194 224.47865 463.31143 216.40573 461.03311 209.09576 c
458.75476 201.78581 454.30872 194.04663 447.69501 185.87822 c
h
W*
0 0 758 762 rc
442.69501 238.31453 m
507.67975 238.31453 l
507.67975 179.61053 l
442.69501 179.61053 l
h
f
Q
0.92156863 0.3882353 0 sc
q
301 375 m
301 633.05713 l
317.67337 611.31073 l
362 762 l
406.59796 611.31073 l
423 633.05713 l
423 375 l
301 375 l
h
W*
0 0 758 762 rc
296 767 m
428 767 l
428 370 l
296 370 l
h
f
Q
0.94901961 0.66274512 0 sc
q
624 375 m
624 568.42621 l
610.21057 591.79315 582.04028 601.31305 539.4892 596.98584 c
496.93811 592.65863 464.52994 559.98816 442.26471 498.97452 c
423.08698 506.40204 404.5459 506.40204 386.64151 498.97452 c
368.73712 491.547 357.18994 477.48358 352 456.78424 c
352 375 l
624 375 l
h
W*
0 0 758 762 rc
347 603 m
629 603 l
629 370 l
347 370 l
h
f
Q
0.96862745 0.64705884 0.054901961 sc
q
-9 518 m
172 518 l
172 373 l
-9 373 l
-9 518 l
h
W*
0 0 758 762 rc
-14 523 m
177 523 l
177 368 l
-14 368 l
h
f
Q
0.96470588 0.50196081 0.06666667 sc
q
-10 565 m
153 565 l
153 518 l
-10 518 l
-10 565 l
h
W*
0 0 758 762 rc
-15 570 m
158 570 l
158 513 l
-15 513 l
h
f
Q
0.92156863 0.3882353 0 sc
q
-10 602 m
127 602 l
127 565 l
-10 565 l
-10 602 l
h
W*
0 0 758 762 rc
-15 607 m
132 607 l
132 560 l
-15 560 l
h
f
Q
0.98431373 0.75686276 0.043137256 sc
q
-10 546 m
111 546 l
111 373 l
-10 373 l
-10 546 l
h
W*
0 0 758 762 rc
-15 551 m
116 551 l
116 368 l
-15 368 l
h
f
Q
1 0.89019608 0.54901963 sc
q
-10 440.35892 m
-10 496.64108 l
-0.66227525 512.43848 16.299736 523 35.67532 523 c
65.125725 523 89 498.59952 89 468.5 c
89 438.40048 65.125725 414 35.67532 414 c
16.299736 414 -0.66227525 424.56149 -10 440.35892 c
h
W*
0 0 758 762 rc
-15 528 m
94 528 l
94 409 l
-15 409 l
h
f
Q
0.96862745 0.64705884 0.054901961 sc
q
-9 573 m
86 573 l
86 546 l
-9 546 l
-9 573 l
h
W*
0 0 758 762 rc
-14 578 m
91 578 l
91 541 l
-14 541 l
h
f
Q
0.98431373 0.75686276 0.043137256 sc
q
624.17786 588.56836 m
758 588.56836 l
757 373.22226 l
624.17786 373.22226 l
624.17786 588.56836 l
h
W*
0 0 758 762 rc
619.17786 593.56836 m
763 593.56836 l
763 368.22226 l
619.17786 368.22226 l
h
f
Q
1 0.89019608 0.54901963 sc
q
646.00287 567.81213 m
676.81458 567.81213 l
676.81458 535.38049 l
646.00287 535.38049 l
646.00287 567.81213 l
h
W*
0 0 758 762 rc
641.00287 572.81213 m
681.81458 572.81213 l
681.81458 530.38049 l
641.00287 530.38049 l
h
f
Q
q
703.7749 567.81213 m
734.58661 567.81213 l
734.58661 535.38049 l
703.7749 535.38049 l
703.7749 567.81213 l
h
W*
0 0 758 762 rc
698.7749 572.81213 m
739.58661 572.81213 l
739.58661 530.38049 l
698.7749 530.38049 l
h
f
Q
q
646.00287 513.32697 m
676.81458 513.32697 l
676.81458 480.89529 l
646.00287 480.89529 l
646.00287 513.32697 l
h
W*
0 0 758 762 rc
641.00287 518.32697 m
681.81458 518.32697 l
681.81458 475.89529 l
641.00287 475.89529 l
h
f
Q
q
703.7749 513.32697 m
734.58661 513.32697 l
734.58661 480.89529 l
703.7749 480.89529 l
703.7749 513.32697 l
h
W*
0 0 758 762 rc
698.7749 518.32697 m
739.58661 518.32697 l
739.58661 475.89529 l
698.7749 475.89529 l
h
f
Q
q
646.00287 458.8418 m
676.81458 458.8418 l
676.81458 426.41016 l
646.00287 426.41016 l
646.00287 458.8418 l
h
W*
0 0 758 762 rc
641.00287 463.8418 m
681.81458 463.8418 l
681.81458 421.41016 l
641.00287 421.41016 l
h
f
Q
q
703.7749 458.8418 m
734.58661 458.8418 l
734.58661 426.41016 l
703.7749 426.41016 l
703.7749 458.8418 l
h
W*
0 0 758 762 rc
698.7749 463.8418 m
739.58661 463.8418 l
739.58661 421.41016 l
698.7749 421.41016 l
h
f
Q
q
646.00287 405.6539 m
676.81458 405.6539 l
676.81458 373.22226 l
646.00287 373.22226 l
646.00287 405.6539 l
h
W*
0 0 758 762 rc
641.00287 410.6539 m
681.81458 410.6539 l
681.81458 368.22226 l
641.00287 368.22226 l
h
f
Q
0.96862745 0.64705884 0.054901961 sc
q
651.13818 621 m
758 621 l
758 588.56836 l
651.13818 588.56836 l
651.13818 621 l
h
W*
0 0 758 762 rc
646.13818 626 m
763 626 l
763 583.56836 l
646.13818 583.56836 l
h
f
Q
0.94901961 0.50588238 0 sc
q
551 566.51483 m
624.17786 566.51483 l
624.17786 373.22226 l
551 373.22226 l
551 566.51483 l
h
W*
0 0 758 762 rc
546 571.51483 m
629.17786 571.51483 l
629.17786 368.22226 l
546 368.22226 l
h
f
Q
1 0.89019608 0.54901963 sc
q
551 535.38049 m
588.23083 535.38049 l
588.23083 373.22226 l
551 373.22226 l
551 535.38049 l
h
W*
0 0 758 762 rc
546 540.38049 m
593.23083 540.38049 l
593.23083 368.22226 l
546 368.22226 l
h
f
Q
1 1 1 sc
q
695 410 m
731 410 l
731 374 l
695 374 l
695 410 l
h
W*
0 0 758 762 rc
690 415 m
736 415 l
736 369 l
690 369 l
h
f
Q
0.078431375 0.65098041 0.67450982 sc
q
120.57143 72 m
-8 72 l
-8 401.36475 l
8.3578091 419.87299 25.500666 427.51117 43.42857 424.27933 c
61.356476 421.04752 73.753273 404.87448 80.618965 375.76031 c
114.17896 376.25327 136.06787 365.79193 146.28572 344.37628 c
156.50356 322.96066 156.50356 301.52393 146.28572 280.0661 c
163.42857 255.41557 172 229.37013 172 201.92979 c
172 174.48946 154.85715 150.95674 120.57143 131.33167 c
120.57143 72 l
h
W*
0 0 758 762 rc
-13 430 m
177 430 l
177 67 l
-13 67 l
h
f
Q
q
757 402.50027 m
757 72 l
631.57141 72 l
631.57141 131.33167 l
597.85712 150.95674 581 174.48946 581 201.92979 c
581 229.37013 589.42859 255.41557 606.28571 280.0661 c
596.23816 301.52393 596.23816 322.96066 606.28571 344.37628 c
616.33325 365.79193 637.85736 376.25327 670.85803 375.76031 c
677.60925 404.87448 689.79944 421.04752 707.42859 424.27933 c
724.69269 427.44427 741.21649 420.18457 757 402.50027 c
h
W*
0 0 758 762 rc
576 430 m
762 430 l
762 67 l
576 67 l
h
f
Q
0.47450981 0.82352942 0.8392157 sc
q
-7 89 m
-7 220.73227 l
3.1483345 235.70065 23.390306 243 43.158855 243 c
94.902893 243 121.87 214.51198 124.06018 157.53592 c
139.90598 162.07158 155.82985 159.97197 171.83177 151.23706 c
187.83369 142.50217 198.55644 121.75648 204 89 c
-7 89 l
h
W*
0 0 758 762 rc
-12 248 m
209 248 l
209 84 l
-12 84 l
h
f
Q
q
757 226.96831 m
757 89 l
551 89 l
556.44965 121.75648 567.18433 142.50217 583.2041 151.23706 c
599.22388 159.97197 615.16547 162.07158 631.02893 157.53592 c
633.22156 214.51198 660.21875 243 712.02051 243 c
728.8338 243 745.9892 237.73167 757 226.96831 c
h
W*
0 0 758 762 rc
546 248 m
762 248 l
762 84 l
546 84 l
h
f
Q
0.64313728 0.9254902 0.94117647 sc
q
-7 5 m
757 5 l
757 118 l
698.12927 118 698.12927 91.095238 635.01678 91.095238 c
571.90436 91.095238 571.88898 118 506.61343 118 c
441.33792 118 438.66797 91.095238 375 91.095238 c
311.33203 91.095238 313.46829 118 249.80672 118 c
186.14514 118 185.60504 91.095238 121.40336 91.095238 c
57.201679 91.095238 57.201679 118 -7 118 c
-7 5 l
h
W*
0 0 758 762 rc
-12 123 m
762 123 l
762 0 l
-12 0 l
h
f
Q
0.47450981 0.82352942 0.8392157 sc
q
-7 5 m
757 5 l
757 100 l
698.12927 100 698.12927 77.380951 635.01678 77.380951 c
571.90436 77.380951 571.88898 100 506.61343 100 c
441.33792 100 438.66797 77.380951 375 77.380951 c
311.33203 77.380951 313.46829 100 249.80672 100 c
186.14514 100 185.60504 77.380951 121.40336 77.380951 c
57.201679 77.380951 57.201679 100 -7 100 c
-7 5 l
h
W*
0 0 758 762 rc
-12 105 m
762 105 l
762 0 l
-12 0 l
h
f
Q
0.078431375 0.65098041 0.67450982 sc
q
-7 5 m
756.71643 5 l
758 72 l
699.15112 72 697.86755 46.23077 634.7785 46.23077 c
571.68951 46.23077 569.10699 72 503.85571 72 c
438.6044 72 438.50256 46.23077 374.85822 46.23077 c
311.21387 46.23077 312.0658 72 248.42786 72 c
184.7899 72 185.53355 46.23077 121.35571 46.23077 c
57.177853 46.23077 58.461411 72 -5.7164431 72 c
-7 5 l
h
W*
0 0 758 762 rc
-12 77 m
763 77 l
763 0 l
-12 0 l
h
f
Q
0.92156863 0.3882353 0 sc
q
153 375 m
153 632.82062 l
169.67336 611.09418 l
214.13567 698 l
258.59796 611.09418 l
275 632.82062 l
275 375 l
153 375 l
h
W*
0 0 758 762 rc
148 703 m
280 703 l
280 370 l
148 370 l
h
f
Q
0.98431373 0.75686276 0.043137256 sc
q
153 517.55206 m
167.56352 537.34192 187.63495 546.80664 213.21426 545.94623 c
238.79358 545.08582 257.66367 525.72614 269.82452 487.86728 c
283.7536 495.16238 297.31229 496.99683 310.50061 493.37061 c
323.68893 489.74442 332.81787 476.72437 337.88748 454.31055 c
345.98096 459.04291 355.07657 459.90332 365.17438 456.89182 c
375.27219 453.88031 381.06573 444.41562 382.55502 428.49768 c
403.36856 431.16092 418.75772 427.45227 428.7225 417.3717 c
438.68729 407.29114 443.04312 392.50058 441.79004 373 c
153 373 l
153 517.55206 l
h
W*
0 0 758 762 rc
148 551 m
447 551 l
447 368 l
148 368 l
h
f
Q
0.94901961 0.34509805 0 sc
q
17.718653 487.12143 m
36.252048 469.21494 l
37.175331 468.32291 l
35.391232 466.47635 l
34.467949 467.36838 l
15.934553 485.27487 l
10.976677 480.1434 l
4.6007881 498.01041 l
22.676529 492.25287 l
17.718653 487.12143 l
h
W
0 0 758 762 rc
-0.39921194 503.01041 m
42.175331 503.01041 l
42.175331 461.47635 l
-0.39921194 461.47635 l
h
f
Q
q
34.948799 439.03192 m
34.466354 467.97861 l
34.444962 469.26224 l
37.012249 469.30502 l
37.033646 468.02139 l
37.51609 439.07471 l
44.650387 439.19363 l
36.515739 422.05569 l
27.814501 438.91302 l
34.948799 439.03192 l
h
W
0 0 758 762 rc
22.814501 474.30502 m
49.650387 474.30502 l
49.650387 417.05569 l
22.814501 417.05569 l
h
f
Q
0.94901961 0.66274512 0 sc
q
36 466 m
37.656853 466 39 467.34314 39 469 c
39 470.65686 37.656853 472 36 472 c
34.343147 472 33 470.65686 33 469 c
33 467.34314 34.343147 466 36 466 c
h
W*
0 0 758 762 rc
28 477 m
44 477 l
44 461 l
28 461 l
h
f
Q
1 1 1 sc
q
169.83823 495 m
579.1618 495 l
586.25214 495 592 489.25214 592 482.16177 c
592 420.11368 592 358.06555 592 296.01743 c
578.76532 251.43582 553.01886 222.43001 514.76068 209 c
526.46185 234.36551 532.31238 252.10316 532.31238 262.21295 c
532.31238 269.44513 535.84894 285.86035 526.85034 296.01743 c
495.75705 296.01743 l
169.83823 296.01743 l
162.74786 296.01743 157 301.76532 157 308.85565 c
157 482.16177 l
157 489.25214 162.74786 495 169.83823 495 c
h
W*
0 0 758 762 rc
152 500 m
597 500 l
597 204 l
152 204 l
h
f
Q
0.94901961 0.50588238 0 sc
q
0 0 758 762 rc
1 0 0 -1 271 492 cm
/F1.1[ 51.352901 0 0 -51.352901 0 0]sf
0.64914727 51 m
(!"#$%&'&\()[ 34.438370 13.075564 10.251154 30.022020 29.970668 27.711140 20.264970 27.711140 0.000000 ] xS
0.11904678 0.49891874 0.59157044 sc
1 0 0 -1 186 430 cm
/F1.1[ 44.933788 0 0 -44.933788 0 0]sf
0.35022038 45 m
(\)*+#,-.%&/#01'23/&)[ 12.074182 9.512956 39.348991 10.007228 27.890875 24.790444 22.094417 26.228325 24.251238 12.523520 10.007228 25.329649 26.273259 17.735839 25.644186 25.734053 13.601931 0.000000 ] xS
0.078431375 0.65098041 0.67450982 sc
1 0 0 -1 204 376 cm
/F2.1[ 25.676451 0 0 -25.676451 0 0]sf
11.4923 26 m
(!"#$"%&'\(\)%*+"#,&-*."&'#\("/#)[ 15.812301 14.836596 5.824162 6.466074 14.836596 9.495895 13.732509 10.137806 14.014950 12.474363 9.495895 6.132280 14.528479 14.836596 5.824162 17.019094 13.732509 12.987892 6.132280 14.220361 14.836596 13.732509 9.598600 5.824162 14.014950 14.836596 14.631185 0.000000 ] xS
1.2048274 57 m
(*001-%'\(%+'#-%1/2*".#*"#3345#6$)[ 6.132280 7.390426 7.390426 14.579832 12.987892 9.495895 10.137806 14.014950 9.495895 14.528479 9.598600 5.824162 12.987892 9.495895 14.579832 14.631185 13.398715 6.132280 14.836596 14.220361 5.824162 6.132280 14.836596 5.824162 17.147477 17.147477 15.863654 5.695780 5.824162 17.969123 0.000000 ] xS
ep
end
